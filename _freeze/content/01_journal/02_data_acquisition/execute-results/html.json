{
  "hash": "b4134dbdfd9dc44017c044597c24c63c",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Ehssan Roshankar \"\n---\n\n\n## import\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_41e23e0d934924bd9d3b5e05daa6b48e'}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)     # HTML Hacking & Web Scraping\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'rvest'\n#> \n#> Das folgende Objekt ist maskiert 'package:readr':\n#> \n#>     guess_encoding\n```\n:::\n\n```{.r .cell-code}\nlibrary(xopen)     # Quickly opening URLs\nlibrary(jsonlite)  # converts JSON files to R objects\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'jsonlite'\n#> \n#> Das folgende Objekt ist maskiert 'package:purrr':\n#> \n#>     flatten\n```\n:::\n\n```{.r .cell-code}\nlibrary(glue)      # concatenate strings\nlibrary(stringi)   # character string/text processing\nlibrary(httr)\n```\n:::\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_07efbbb2a9fca91ed81c80f12bc7d2a5'}\n\n```{.r .cell-code}\nget_weather_data <- function(location) {\n  # Construct URL for API request\n  url <- glue(\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/{location}\",\n              \"?unitGroup=metric&key=RA4VC64DQX39GT95QYTHY545B&contentType=json\")\n  json_data <- fromJSON(content(GET(url), \"text\"), flatten = TRUE)\n  daily_data <- json_data$days\n  # Extract only datetime, tempmax, tempmin, and temp columns\n  extracted_data <- daily_data[, c(\"datetime\", \"tempmax\", \"tempmin\", \"temp\")]\n  colnames(extracted_data) <- c(\"Datum\", \"Max. Temperatur\", \"Min. Temperatur\", \"Temperatur\")\n  cat(paste0(\"Wetter \", location, \" die nächsten 15 Tage:\\n\\n\"))\n  print(as_tibble(extracted_data))\n}\n\n# Example usage\nweather_data <- get_weather_data(\"Hamburg\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> No encoding supplied: defaulting to UTF-8.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Wetter Hamburg die nächsten 15 Tage:\n#> \n#> # A tibble: 15 × 4\n#>    Datum      `Max. Temperatur` `Min. Temperatur` Temperatur\n#>    <chr>                  <dbl>             <dbl>      <dbl>\n#>  1 2023-04-26               9.6               3          6  \n#>  2 2023-04-27              10.3               2          6.3\n#>  3 2023-04-28              11.5               4.8        8  \n#>  4 2023-04-29              15                 7.7       11.1\n#>  5 2023-04-30              14.7               5.1        9.7\n#>  6 2023-05-01              13.6               1.9        8.7\n#>  7 2023-05-02               9.5               2.9        6.2\n#>  8 2023-05-03              12                 1.3        6.7\n#>  9 2023-05-04              14.5               2.1        7.9\n#> 10 2023-05-05              14.4               2.8        8.6\n#> 11 2023-05-06              17.2               3.1       10.1\n#> 12 2023-05-07              16.5               8.3       11.9\n#> 13 2023-05-08              15.3               9.7       12.4\n#> 14 2023-05-09              22.6              10.1       16  \n#> 15 2023-05-10              18.9              11.3       15.1\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}