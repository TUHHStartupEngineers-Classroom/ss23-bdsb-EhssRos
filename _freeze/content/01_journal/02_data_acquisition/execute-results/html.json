{
  "hash": "0c5ecbe967a0fc5cd4590a7b903d349c",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Ehssan Roshankar \"\n---\n\n\n## import\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_f92e1a9999401b9aa8964e08f3675e80'}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(rvest)     \nlibrary(xopen)     \nlibrary(jsonlite)  \nlibrary(glue)      # concatenate strings\nlibrary(stringi)   # character string/text processing\nlibrary(httr)\n```\n:::\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_eb6b83c9b35e4b15aaef230d106f34e0'}\n\n```{.r .cell-code}\nget_weather_data <- function(location) {\n  # Construct URL for API request\n  url <- glue(\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/{location}\",\n              \"?unitGroup=metric&key=RA4VC64DQX39GT95QYTHY545B&contentType=json\")\n  json_data <- fromJSON(content(GET(url), \"text\"), flatten = TRUE)\n  daily_data <- json_data$days\n  # Extract only datetime, tempmax, tempmin, and temp columns\n  extracted_data <- daily_data[, c(\"datetime\", \"tempmax\", \"tempmin\", \"temp\")]\n  colnames(extracted_data) <- c(\"Datum\", \"Max. Temperatur\", \"Min. Temperatur\", \"Temperatur\")\n  cat(paste0(\"Wetter \", location, \" die nächsten 15 Tage:\\n\\n\"))\n  print(as_tibble(extracted_data))\n}\n\n\nweather_data <- get_weather_data(\"Hamburg\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> No encoding supplied: defaulting to UTF-8.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Wetter Hamburg die nächsten 15 Tage:\n#> \n#> # A tibble: 15 × 4\n#>    Datum      `Max. Temperatur` `Min. Temperatur` Temperatur\n#>    <chr>                  <dbl>             <dbl>      <dbl>\n#>  1 2023-05-01              18.6               4.3       11.4\n#>  2 2023-05-02              12.1               6.6        9.5\n#>  3 2023-05-03              13                 4.4        8.9\n#>  4 2023-05-04              14                 4.8        9.8\n#>  5 2023-05-05               9.2               6.6        8.1\n#>  6 2023-05-06              14.2               3.7        8.7\n#>  7 2023-05-07              14.8               3.1        8.8\n#>  8 2023-05-08              15.2               2.3        9  \n#>  9 2023-05-09              15.2               2.1        9.2\n#> 10 2023-05-10              14                 6.8        9.7\n#> 11 2023-05-11              14.6               3.1        8.8\n#> 12 2023-05-12              15.4               2.1        8.7\n#> 13 2023-05-13              14.1               4.2        9.6\n#> 14 2023-05-14              10.4               5.3        7.8\n#> 15 2023-05-15              14.5               5.6        9.7\n```\n:::\n:::\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-3_2bc435d0ab50136035c19f320acf027b'}\n\n```{.r .cell-code}\nscrape_bikes <- function(url) {\n  page <- read_html(url)\n  bikes <- page %>% html_nodes('.catalog-category-bikes__content')\n  model_prices <- data.frame(model = character(), price = numeric())\n  for (bike in bikes) {\n    model <- bike %>% \n      html_node('.basic-headline__title') %>% \n      html_text(trim = TRUE)\n    price <- bike %>% \n      html_node('.catalog-category-bikes__price-title') %>% \n      html_text(trim = TRUE) %>% \n      stringr::str_extract(\"[0-9.,]+\\\\,[0-9,]+|[0-9,]+\") %>%   #\n      stringr::str_replace_all(\"[.,]\", \"\") %>%  \n      as.numeric()\n    model_prices <- rbind(model_prices, data.frame(model = model, price = price/100))\n  }\n  return(model_prices)\n}\n\n# URLs different bike categories\nurls <- c(\n  'https://www.rosebikes.de/fahrr%C3%A4der/mtb',\n  'https://www.rosebikes.de/fahrr%C3%A4der/rennrad',\n  'https://www.rosebikes.de/fahrr%C3%A4der/gravel'\n)\n\n# Scrape bike data \nbike_data <- map_dfr(urls, scrape_bikes, .id = 'category')\n\nbike_data <- as_tibble(bike_data)\nprint(bike_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 17 × 3\n#>    category model            price\n#>    <chr>    <chr>            <dbl>\n#>  1 1        COUNT SOLO         749\n#>  2 1        PSYCHO PATH       1499\n#>  3 1        THRILL HILL       2999\n#>  4 1        ROOT MILLER PLUS  4999\n#>  5 1        GROUND CONTROL    1999\n#>  6 1        ROOT MILLER       2299\n#>  7 1        BONERO            1499\n#>  8 1        SOUL FIRE         1999\n#>  9 1        THE BRUCE          899\n#> 10 2        XLITE             2999\n#> 11 2        REVEAL PLUS       3999\n#> 12 2        PRO SL            1099\n#> 13 2        REVEAL            2499\n#> 14 3        BACKROAD AL       1999\n#> 15 3        BACKROAD          2499\n#> 16 3        BACKROAD LIMITED  4499\n#> 17 3        BACKROAD PLUS     5199\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}