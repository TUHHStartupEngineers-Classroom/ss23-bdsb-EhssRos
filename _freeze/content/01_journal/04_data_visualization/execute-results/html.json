{
  "hash": "b5f31b5a52c3b3103fc1568b7e44d92a",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Ehssan Roshankar\"\n---\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_f2306c82cf51ad9fabe829a0a5d90fd0'}\n\n```{.r .cell-code}\n#install.packages(\"ggrepel\")\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(lubridate)\n\nlibrary(ggplot2)\nlibrary(ggrepel)\n\n# Load COVID-19 data from the web\nurl <- \"https://covid.ourworldindata.org/data/owid-covid-data.csv\"\ncovid_data_tbl <- fread(url)\nplot_date <- today()\ncovid_data_clean <- covid_data_tbl %>%\n  mutate(year = year(date), month = month(date), day = day(date)) %>%\n  mutate(location_cleaned = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct() %>%\n  select(location_cleaned, date, year, month, day, total_cases) %>%\n  filter(location_cleaned %in% c(\"Europe\", \"Germany\", \"UK\", \"France\", \"Spain\", \"USA\"), as.Date(date) <= plot_date)\ntop_locations <- covid_data_clean %>%\n  group_by(location_cleaned) %>%\n  arrange(desc(total_cases)) %>%\n  distinct(location_cleaned) %>%\n  pull(location_cleaned)\nggplot(data = covid_data_clean, aes(x = date, y = total_cases, color = location_cleaned, fill = location_cleaned)) +\n  geom_line(size = 1) +\n  scale_x_date(labels = scales::label_date(format = \"%B '%y\"), date_breaks = \"1 month\") +\n  scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = \"M\")) +\n  labs(\n    title = str_glue(\"COVID-19 Cases Worldwide\"),\n    subtitle = str_glue(\"As of {format(plot_date, format='%d/%m/%Y')}\"),\n    x = \"Date\",\n    y = \"Cumulative Cases\",\n    color = \"Continent / Country\"\n  ) +\n  geom_label_repel(\n    aes(label = format(total_cases, big.mark = \".\", decimal.mark = \",\", scientific = FALSE)),\n    color = \"white\",\n    hjust = \"inward\",\n    nudge_x = -20,\n    min.segment.length = 0,\n    size = 3,\n    segment.color = \"black\",\n    inherit.aes = TRUE,\n    data = covid_data_clean %>%\n      filter(date == plot_date - 1, location_cleaned %in% head(top_locations, 2)),\n    show.legend = FALSE\n  ) +\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 10),\n    plot.subtitle = element_text(size = 9),\n    legend.text = element_text(size = 7),\n    legend.title = element_text(size = 9),\n    legend.background = element_blank(),\n    line = element_line(color = \"grey\"),\n    panel.grid.major = element_line(color = \"grey\", size = 0.07),\n    axis.ticks = element_line(color = \"grey\"),\n    axis.line = element_line(color = \"grey\"),\n    axis.title.x = element_blank(),\n    panel.background = element_blank()\n  ) +\n  scale_color_brewer(palette = \"Accent\") +\n  scale_fill_brewer(palette = \"Accent\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\n#> ℹ Please use the `linewidth` argument instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 98 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 1 rows containing missing values (`geom_label_repel()`).\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\nchall 2\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_b2b56918021fcfc6aa0664a2725cc966'}\n\n```{.r .cell-code}\nurl <- \"https://covid.ourworldindata.org/data/owid-covid-data.csv\"\ncovid_data_tbl <- fread(url)\nworld <- map_data(\"world\")\n\nplot_date <- as.Date(\"2023-01-01\")  # Define the desired plot date\n\ncov_data <- covid_data_tbl %>%\n  mutate(year = year(date),\n         month = month(date),\n         day = day(date)) %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct() %>%\n  filter(as.Date(date) == plot_date - 1) %>%\n  mutate(mortality = (total_deaths / population) * 100) %>%\n  filter(!is.na(mortality)) %>%\n  distinct() %>%\n  select(location, total_cases, total_deaths, mortality, total_deaths_per_million, new_deaths, year, month, day, date)\n\ncov_data_world <- world %>%\n  left_join(cov_data, by = c(\"region\" = \"location\")) %>%\n  select(long, lat, group, order, region, subregion, mortality) %>%\n  arrange(order)\n\nlow_color <- RColorBrewer::brewer.pal(n = 8, name = \"YlOrRd\")[1]\nhigh_color <- RColorBrewer::brewer.pal(n = 8, name = \"YlOrRd\")[8]\n\ncov_data_world %>%\n  ggplot() +\n  geom_map(aes(long, lat, map_id = region, fill = mortality),\n            map = cov_data_world,\n            color = \"grey\",\n            size = 0.09) +\n  scale_fill_gradient(low = low_color,\n                      high = high_color,\n                      na.value = \"grey\",\n                      labels = percent,\n                      breaks = c(0, 0.05, 0.1, 0.15, 0.2, 0.25)) +\n  labs(\n    title = \"Distribution of COVID-19 Mortality Rate by Country\",\n    subtitle = \"Mortality rate is expressed as deaths per population\",\n    fill = \"Mortality Rate\",\n    caption = str_glue(\"Date: {format(plot_date, format = '%m/%d/%Y')}\")\n  ) +\n  theme(plot.title = element_text(size = 10),\n        plot.subtitle = element_text(size = 9),\n        legend.text = element_text(size = 7),\n        legend.title = element_text(size = 9),\n        plot.caption = element_text(size = 7),\n        axis.text = element_blank(),\n        axis.title = element_blank(),\n        line = element_line(color = \"grey\"),\n        panel.grid.major = element_line(color = \"grey\", size = 0.1),\n        axis.ticks = element_blank(),\n        axis.line = element_blank(),\n        panel.background = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_map(aes(long, lat, map_id = region, fill = mortality), map =\n#> cov_data_world, : Ignoring unknown aesthetics: x and y\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\n#> ℹ Please use the `linewidth` argument instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}