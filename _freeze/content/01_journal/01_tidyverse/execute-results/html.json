{
  "hash": "888353f7d516fcd44e0365cb56c3abe5",
  "result": {
    "markdown": "---\ntitle: \"01 Intro to the tidyverse\"\nauthor: \"Ehssan Roshankar\"\ndate: \"2023-04-25\"\n\n---\n\n\n\n\n\n\n# Challenge1: Intro to the tidyverse\n\n## Preparation\n### include libraries\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_10cf5280b9bd8e09e5b8ed43c92a6017'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(lubridate)\n```\n:::\n\n\n\n### Loading data\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_14a64c6ed6b1968412850e5c67988d66'}\n\n```{.r .cell-code}\nbikes_tbl      <- read_excel( \"C:/Users/ehsan/Desktop/DataSciece/myds/ss23-bdsb-EhssRos/01_tidyverse/ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"C:/Users/ehsan/Desktop/DataSciece/myds/ss23-bdsb-EhssRos/01_tidyverse/ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> New names:\n#> • `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nbikeshops_tbl  <- read_excel(\"C:/Users/ehsan/Desktop/DataSciece/myds/ss23-bdsb-EhssRos/01_tidyverse/ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n```\n:::\n\n\n\n### Joining Data\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-3_f89a769f25f3c223e517637efcb32ba0'}\n\n```{.r .cell-code}\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n```\n:::\n\n\n### Wrangling Data\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-4_fe4a7aa021ac9a4ef4cb85d517303e0e'}\n\n```{.r .cell-code}\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  # 5.1 Separate category name\n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %>%\n  \n  # separate location: city, state\n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \", \") %>%\n  \n  # 5.2 Add the total price (price * quantity) \n  # Add a column to a tibble that uses a formula-style calculation of other columns\n  mutate(total.price = price * quantity) %>%\n  \n  select(-...1, -gender, -url) %>%\n  \n  # 5.3.2 by a pattern\n  # You can use the select_helpers to define patterns. \n  # Type ?ends_with and click on Select helpers in the documentation\n  select(-ends_with(\".id\")) %>%\n  \n  # 5.3.3 Actually we need the column \"order.id\". Let's bind it back to the data\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  \n  # 5.3.4 You can reorder the data by selecting the columns in your desired order.\n  # You can use select_helpers like contains() or everything()\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  \n  # 5.4 Rename columns because we actually wanted underscores instead of the dots\n  # (one at the time vs. multiple at once)\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n```\n:::\n\n\n#### Step 1: Manipulation\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-5_5cac228891402a50210ad272508dc5d3'}\n\n```{.r .cell-code}\nsales_by_loc_tbl <- bike_orderlines_wrangled_tbl %>%\n\n  select(state, total_price) %>%\n  \n  group_by(state) %>% \n  summarize(sales = sum(total_price))%>%\n  \n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n:::\n\n\n#### Step 2: Vis\n\n::: {.cell hash='01_tidyverse_cache/html/plot_e5710d78762450760e5b7fe5363a5557'}\n\n```{.r .cell-code}\nsales_by_loc_tbl %>%\n  \n  ggplot(aes(x = state, y = sales)) +\n  \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Sales rev by state\",\n    subtitle = \"year 15-19\",\n    x = \"\", \n    y = \"Revenue\"\n  )\n```\n\n::: {.cell-output-display}\n![Sales by state](01_tidyverse_files/figure-html/plot-1.png){width=1056}\n:::\n\n```{.r .cell-code}\n#NRW Best\n```\n:::\n\n\n### Sales by location and year\n\n#### Step 1: Manipulation\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-6_847292c158db1a077cc67c9532e3cf68'}\n\n```{.r .cell-code}\nsales_by_year_loc_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(order_date, total_price, state) %>%\n  mutate(year = year(order_date)) %>%\n  group_by(year, state) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n```\n:::\n:::\n\n\n#### Step 2: Vis\n\n::: {.cell hash='01_tidyverse_cache/html/plot2_0f6c994cc08da6d6bd38dbeaeeafeb74'}\n\n```{.r .cell-code}\nsales_by_year_loc_tbl %>%\n\n  ggplot(aes(x = year, y = sales, fill = state))+\n\n  geom_col() + # Run up to here to get a stacked bar plot\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n \n  facet_wrap(~ state)+\n\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by state and year\",\n    subtitle = \"\",\n    fill = \"states\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![Sales by state and year](01_tidyverse_files/figure-html/plot2-1.png){width=1056}\n:::\n\n```{.r .cell-code}\n#NRW Best\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}